name: 'build-container-image-action'
description: 'The official bCyber container building action'

inputs:
  registry_name:
    description: registry name (default ghcr.io)
    required: false
    default: "ghcr.io"
  registry_username:
    description: registry username
    required: true
  registry_password:
    description: registry password
    required: true
  image_repository:
    description: container image repository
    required: true
  dockerfile_path:
    description: path to Dockerfile (default ./Dockerfile)
    default: "./Dockerfile"
    required: false
  build_args:
    description: build args
    default: "build args to be supplied to the build. Specify as list of newline delimited KEY=VALUE tuples"
    required: false
  build_context:
    description: path to build context (default .)
    default: "."
    required: false
  build_target:
    description: sets the target stage to build
    default: ""
    required: false
  push_to_registry:
    description: push to container registry (true/false)
    required: true


runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry_name }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Extract container metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry_name }}/${{ inputs.image_repository }}
        tags: |
          # set latest tag for default branch
          type=raw,value=latest,enable={{is_default_branch}}
          # example: main-5840c85-1668618206
          type=raw,value={{branch}}-{{sha}}-{{date 'X'}},enable={{is_default_branch}}
          # git tags
          type=ref,event=tag
          # pr-<pr-number>
          type=ref,event=pr

    - name: Build and push container image
      uses: docker/build-push-action@v6
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: ${{ inputs.build_context }}
        push: ${{ inputs.push_to_registry }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ${{ inputs.dockerfile_path }}
        target: ${{ inputs.build_target }}
        build-args: ${{ inputs.build_args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
